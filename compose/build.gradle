/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        versionCode 1
        versionName "1.0"
        minSdk 30
        //noinspection ExpiredTargetSdkVersion
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        warningsAsErrors true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        allWarningsAsErrors = true
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    // Workaround for https://github.com/Kotlin/kotlinx.coroutines/issues/2023
    packagingOptions {
        // for JNA and JNA-platform
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {
    def composeBom = platform(libs.androidx.compose.bom)

    implementation composeBom
    implementation libs.kotlinx.coroutines.android
    implementation libs.androidx.activity.compose
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.wear
    implementation libs.wear.compose.foundation
    implementation libs.wear.compose.material
    implementation libs.androidx.window
    implementation libs.compose.ui.test.manifest

  implementation("androidx.health:health-services-client:1.0.0-beta02")

  implementation libs.androidx.lifecycle.viewmodel.compose

  // Used to bridge between Futures and coroutines
  implementation libs.guava
  implementation libs.concurrent.futures

  // Used for permissions
  implementation libs.accompanist.permissions

    // Release mode doesn't work without that dependency
    compileOnly "com.google.android.wearable:wearable:2.9.0"

    androidTestImplementation composeBom
    androidTestImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.test.core.ktx
    androidTestImplementation libs.test.ext.junit.ktx
    androidTestImplementation libs.test.runner
    androidTestImplementation libs.test.uiautomator
    androidTestImplementation libs.compose.ui.test.junit4
}
